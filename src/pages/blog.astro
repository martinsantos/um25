---

import Articles from '../components/Articles.astro';
import Layout from '../layouts/Layout.astro';
import { getAllPosts, getCategories } from '../data/blog-posts';

const posts = getAllPosts();
const categories = getCategories();


<Layout title="Blog - ULTIMA MILLA">
	<div class="max-w-6xl mx-auto px-4 py-12">
		<h1 class="text-4xl font-bold mb-8 text-center">Blog</h1>
		
		<!-- Filtros de Categorías -->
		<div class="mb-12">
			<div class="flex flex-wrap justify-center gap-4" id="categoryFilters">
				{categories.map(category => (
					<button
						class="px-4 py-2 rounded-full border border-gray-300 hover:border-red-500 hover:text-red-500 transition-colors duration-300 category-filter"
						data-category={category}
					>
						{category}
					</button>
				))}
			</div>
		</div>

		<!-- Barra de Búsqueda -->
		<div class="mb-12">
			<div class="max-w-xl mx-auto">
				<div class="relative">
					<input
						type="text"
						id="searchInput"
						placeholder="Buscar artículos..."
						class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:outline-none focus:border-red-500 pl-12"
					/>
					<svg
						class="absolute left-4 top-3.5 h-5 w-5 text-gray-400"
						fill="none"
						stroke="currentColor"
						viewBox="0 0 24 24"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
						/>
					</svg>
				</div>
			</div>
		</div>

		<!-- Grid de Posts -->
		<div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8" id="postsGrid">
			{posts.map(post => (
				<article class="bg-white rounded-lg shadow-lg overflow-hidden post-card" data-category={post.category}>
					<div class="relative">
						<img
							src={post.image}
							alt={post.title}
							class="w-full h-48 object-cover"
						/>
						<div class="absolute top-4 right-4">
							<span class="bg-red-500 text-white px-3 py-1 rounded-full text-sm">
								{post.category}
							</span>
						</div>
					</div>
					<div class="p-6">
						<div class="flex items-center text-sm text-gray-500 mb-2">
							<span>{post.date}</span>
							<span class="mx-2">•</span>
							<span>{post.readTime} min lectura</span>
						</div>
						<h2 class="text-xl font-semibold mb-2 hover:text-red-500 transition-colors duration-300">
							<a href={`/blog/${post.slug}`}>{post.title}</a>
						</h2>
						<p class="text-gray-600 mb-4">
							{post.excerpt}
						</p>
						<div class="flex items-center justify-between">
							<div class="flex items-center space-x-3">
								<img
									src={post.authorImage}
									alt={post.author}
									class="w-8 h-8 rounded-full object-cover"
								/>
								<div class="text-sm">
									<p class="font-semibold">{post.author}</p>
									<p class="text-gray-500">{post.authorRole}</p>
								</div>
							</div>
							<a
								href={`/blog/${post.slug}`}
								class="inline-flex items-center text-red-500 hover:text-red-600"
							>
								Leer más
								<svg
									class="w-4 h-4 ml-2"
									fill="none"
									stroke="currentColor"
									viewBox="0 0 24 24"
								>
									<path
										stroke-linecap="round"
										stroke-linejoin="round"
										stroke-width="2"
										d="M9 5l7 7-7 7"
									/>
								</svg>
							</a>
						</div>
					</div>
				</article>
			))}
		</div>

		<!-- Servicios -->
		<div class="services mt-12">
			{services.map(service => (
				<div class="service-card">
					<img src={service.Imagen_servicio} alt={service.Title} class="service-image" />
					<h2>
						<a href={`/blog/${service.Slug}`}>{service.Title}</a>
					</h2>
					<p>{service.Descripcion}</p>
				</div>
			))}
		</div>

		<!-- Paginación -->
		<div class="mt-12 flex justify-center">
			<nav class="flex space-x-2">
				<a
					href="#"
					class="px-4 py-2 border border-gray-300 rounded-lg hover:border-red-500 hover:text-red-500 transition-colors duration-300"
				>
					Anterior
				</a>
				<a
					href="#"
					class="px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors duration-300"
				>
					1
				</a>
				<a
					href="#"
					class="px-4 py-2 border border-gray-300 rounded-lg hover:border-red-500 hover:text-red-500 transition-colors duration-300"
				>
					2
				</a>
				<a
					href="#"
					class="px-4 py-2 border border-gray-300 rounded-lg hover:border-red-500 hover:text-red-500 transition-colors duration-300"
				>
					3
				</a>
				<a
					href="#"
					class="px-4 py-2 border border-gray-300 rounded-lg hover:border-red-500 hover:text-red-500 transition-colors duration-300"
				>
					Siguiente
				</a>
			</nav>
		</div>
	</div>
</Layout>

<script>
	import { getPostsByCategory, searchPosts } from '../data/blog-posts';

	const categoryButtons = document.querySelectorAll('.category-filter');
	const postCards = document.querySelectorAll('.post-card');
	const searchInput = document.getElementById('searchInput');

	let currentCategory = 'Todos';

	function filterPosts() {
		const searchTerm = searchInput?.value.toLowerCase() || '';
		const filteredPosts = searchTerm
			? searchPosts(searchTerm)
			: getPostsByCategory(currentCategory);

		postCards.forEach(card => {
			const postSlug = card.querySelector('a')?.getAttribute('href')?.split('/').pop();
			const isVisible = filteredPosts.some(post => post.slug === postSlug);
			card.style.display = isVisible ? 'block' : 'none';
		});
	}

	categoryButtons.forEach(button => {
		button.addEventListener('click', () => {
			// Actualizar estilos de botones
			categoryButtons.forEach(btn => {
				btn.classList.remove('bg-red-500', 'text-white');
				btn.classList.add('border-gray-300', 'text-gray-700');
			});
			button.classList.remove('border-gray-300', 'text-gray-700');
			button.classList.add('bg-red-500', 'text-white');

			// Actualizar categoría actual y filtrar
			currentCategory = button.getAttribute('data-category') || 'Todos';
			filterPosts();
		});
	});

	// Búsqueda en tiempo real
	if (searchInput) {
		searchInput.addEventListener('input', filterPosts);
	}

	// Activar el botón "Todos" por defecto
	const defaultButton = document.querySelector('[data-category="Todos"]');
	if (defaultButton) {
		defaultButton.classList.remove('border-gray-300', 'text-gray-700');
		defaultButton.classList.add('bg-red-500', 'text-white');
	}
</script>
