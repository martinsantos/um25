---
import type { HTMLAttributes } from 'astro/types';

type Props = HTMLAttributes<'a'>;

const { href, class: className, ...props } = Astro.props;
const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g);
const isActive = href === pathname || href === `/${subpath?.[0]}`;
---

<a
    href={href}
    class:list={[
        className,
        { active: isActive },
        'transition-colors duration-200 relative'
    ]}
    {...props}
>
    <slot />
    {isActive && (
        <span class="absolute bottom-0 left-0 w-full h-0.5 bg-primary-600 transform origin-left"></span>
    )}
</a>
<style>
	a {
		display: inline-block;
		text-decoration: none;
	}
	a.active {
		font-weight: bolder;
		text-decoration: underline;
	}
</style>
