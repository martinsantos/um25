---
import { getAllPosts, getCategories, getPostsByFilters } from '../data/blog-posts';
import type { BlogPost, BlogCategory, BlogFilters } from '../types/blog';

const posts = getAllPosts();
const categories = getCategories();

// Definir la función de filtrado en el lado del cliente
const filterPosts = (posts: BlogPost[], filters: BlogFilters) => {
    return posts.filter(post => {
        if (filters.category && !post.categories?.includes(filters.category)) {
            return false;
        }
        if (filters.searchQuery) {
            const searchLower = filters.searchQuery.toLowerCase();
            return (
                post.title.toLowerCase().includes(searchLower) ||
                post.excerpt.toLowerCase().includes(searchLower) ||
                post.content.toLowerCase().includes(searchLower)
            );
        }
        return true;
    }).slice(0, filters.limit || 5);
};
---

<div
    x-data="{
        searchQuery: '',
        posts: [] as BlogPost[],
        categories: categories,
        selectedCategory: '',
        showResults: false,
        init() {
            this.$watch('searchQuery', (value) => {
                if (value.length < 2) {
                    this.posts = [];
                    this.showResults = false;
                    return;
                }
                
                const filters = {
                    searchQuery: value,
                    category: this.selectedCategory,
                    limit: 5
                };
                
                const results = getPostsByFilters(filters);
                this.posts = results.posts;
                this.showResults = true;
            });
        }
    }"
    class="relative max-w-2xl mx-auto"
>
    <!-- Barra de búsqueda -->
    <div class="relative">
        <input
            type="text"
            x-model="searchQuery"
            placeholder="Buscar artículos..."
            class="w-full px-4 py-3 pl-12 border border-gray-300 rounded-lg focus:outline-none focus:border-primary-500 focus:ring-1 focus:ring-primary-500"
            @focus="showResults = searchQuery.length >= 2"
            @blur="setTimeout(() => showResults = false, 200)"
        />
        <svg
            class="absolute left-4 top-3.5 h-5 w-5 text-gray-400"
            fill="none"
            stroke="currentColor"
            viewBox="0 0 24 24"
        >
            <path
                stroke-linecap="round"
                stroke-linejoin="round"
                stroke-width="2"
                d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"
            />
        </svg>
    </div>

    <!-- Filtros de categorías -->
    <div class="flex flex-wrap gap-2 mt-4">
        <button
            @click="selectedCategory = ''; searchQuery.length >= 2 && $dispatch('input', searchQuery)"
            :class="{'bg-primary-100 text-primary-700': !selectedCategory}"
            class="px-3 py-1 text-sm rounded-full border border-gray-300 hover:border-primary-500 transition-colors"
        >
            Todos
        </button>
        {categories.map(category => (
            <button
                @click={`selectedCategory = '${category.name}'; searchQuery.length >= 2 && $dispatch('input', searchQuery)`}
                x-bind:class={`{'bg-primary-100 text-primary-700': selectedCategory === '${category.name}'}`}
                class="px-3 py-1 text-sm rounded-full border border-gray-300 hover:border-primary-500 transition-colors"
            >
                {category.name} ({category.count})
            </button>
        ))}
    </div>

    <!-- Resultados de búsqueda -->
    <div
        x-show="showResults"
        x-transition:enter="transition ease-out duration-200"
        x-transition:enter-start="opacity-0 translate-y-1"
        x-transition:enter-end="opacity-100 translate-y-0"
        x-transition:leave="transition ease-in duration-150"
        x-transition:leave-start="opacity-100 translate-y-0"
        x-transition:leave-end="opacity-0 translate-y-1"
        class="absolute z-50 w-full mt-2 bg-white rounded-lg shadow-lg border border-gray-200 max-h-96 overflow-y-auto"
    >
        <template x-if="posts.length > 0">
            <div class="py-2">
                <template x-for="post in posts" :key="post.slug">
                    <a
                        :href="'/blog/' + post.slug"
                        class="block px-4 py-3 hover:bg-gray-50 transition-colors"
                    >
                        <div class="flex items-start gap-4">
                            <img
                                :src="post.image"
                                :alt="post.title"
                                class="w-16 h-16 object-cover rounded"
                            />
                            <div class="flex-1 min-w-0">
                                <h3 x-text="post.title" class="font-semibold text-gray-900 mb-1 truncate"></h3>
                                <p x-text="post.excerpt" class="text-sm text-gray-600 line-clamp-2"></p>
                                <div class="flex gap-2 mt-2">
                                    <template x-for="category in post.categories" :key="category">
                                        <span
                                            x-text="category"
                                            class="px-2 py-1 text-xs font-medium text-primary-700 bg-primary-100 rounded-full"
                                        ></span>
                                    </template>
                                </div>
                            </div>
                        </div>
                    </a>
                </template>
            </div>
        </template>
        
        <template x-if="searchQuery.length >= 2 && posts.length === 0">
            <div class="px-4 py-6 text-center text-gray-500">
                No se encontraron resultados para "<span x-text="searchQuery"></span>"
            </div>
        </template>
    </div>
</div>

<style>
.line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
}
</style>
